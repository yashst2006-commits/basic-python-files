import time, os, shutil

delay = 0.05
rows, cols = 5, 5
LETTER_SPACING = cols + 2

# Colors
BLUE = "\033[34m"
RESET = "\033[0m"
STAR = BLUE + "*" + RESET

letters = {
    "A": [(0,2),(1,1),(1,3),(2,0),(2,1),(2,2),(2,3),(2,4),(3,0),(3,4),(4,0),(4,4)],
    "B": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(2,1),(2,2),(2,3),
          (4,1),(4,2),(4,3),(1,4),(3,4)],
    "C": [(0,1),(0,2),(0,3),(1,0),(2,0),(3,0),(4,1),(4,2),(4,3)],
    "D": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(1,4),(2,4),(3,4),(4,1),(4,2),(4,3)],
    "E": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(0,4),(2,1),(2,2),(2,3),(4,1),(4,2),(4,3),(4,4)],
    "F": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(0,4),(2,1),(2,2),(2,3)],
    "G": [(0,1),(0,2),(0,3),(1,0),(2,0),(3,0),(4,1),(4,2),(4,3),(2,4),(3,4),(2,3)],
    "H": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,4),(1,4),(2,4),(3,4),(4,4),(2,1),(2,2),(2,3)],
    "I": [(0,0),(0,1),(0,2),(0,3),(0,4),(1,2),(2,2),(3,2),(4,0),(4,1),(4,2),(4,3),(4,4)],
    "J": [(0,0),(0,1),(0,2),(0,3),(0,4),(1,2),(2,2),(3,2),(3,0),(4,1),(4,2)],
    "K": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,4),(1,3),(2,2),(3,3),(4,4)],
    "L": [(0,0),(1,0),(2,0),(3,0),(4,0),(4,1),(4,2),(4,3),(4,4)],
    "M": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,4),(1,4),(2,4),(3,4),(4,4),(1,1),(2,2),(1,3)],
    "N": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,4),(1,4),(2,4),(3,4),(4,4),(1,1),(2,2),(3,3)],
    "O": [(0,1),(0,2),(0,3),(1,0),(2,0),(3,0),(1,4),(2,4),(3,4),(4,1),(4,2),(4,3)],
    "P": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(2,1),(2,2),(2,3),(1,4)],
    "Q": [(0,1),(0,2),(0,3),(1,0),(2,0),(3,0),(1,4),(2,4),(3,4),(4,1),(4,2),(4,3),(3,3)],
    "R": [(0,0),(1,0),(2,0),(3,0),(4,0),(0,1),(0,2),(0,3),(2,1),(2,2),(2,3),(1,4),(3,2),(4,3)],
    "S": [(0,1),(0,2),(0,3),(1,0),(2,1),(2,2),(2,3),(3,4),(4,1),(4,2),(4,3)],
    "T": [(0,0),(0,1),(0,2),(0,3),(0,4),(1,2),(2,2),(3,2),(4,2)],
    "U": [(0,0),(1,0),(2,0),(3,0),(0,4),(1,4),(2,4),(3,4),(4,1),(4,2),(4,3)],
    "V": [(0,0),(1,1),(2,2),(0,4),(1,3),(2,2),(3,2),(4,2)],
    "W": [(0,0),(1,0),(2,0),(3,0),(0,4),(1,4),(2,4),(3,4),(3,2),(4,1),(4,3)],
    "X": [(0,0),(1,1),(2,2),(3,3),(4,4),(0,4),(1,3),(2,2),(3,1),(4,0)],
    "Y": [(0,0),(1,1),(2,2),(0,4),(1,3),(3,2),(4,2)],
    "Z": [(0,0),(0,1),(0,2),(0,3),(0,4),(1,3),(2,2),(3,1),(4,0),(4,1),(4,2),(4,3),(4,4)],
    " ": []
}

def animate_word(lines, line_offsets=None):
    if line_offsets is None:
        line_offsets = [0] * len(lines)  # default: no shift

    max_widths = [len(w) * LETTER_SPACING for w in lines]
    total_width = max(max_widths)

    try:
        term_width = shutil.get_terminal_size().columns
    except Exception:
        term_width = 80
    left_padding = max(0, (term_width - total_width * 2) // 2)

    grid_height = len(lines) * (rows + 1)  
    grid = [[" " for _ in range(total_width)] for _ in range(grid_height)]

    for line_index, word in enumerate(lines):
        offset_shift = line_offsets[line_index]
        for index, ch in enumerate(word.upper()):
            if ch not in letters:
                continue
            offset_x = index * LETTER_SPACING + offset_shift
            offset_y = line_index * (rows + 1)
            for (r, c) in letters[ch]:
                if 0 <= r+offset_y < grid_height and 0 <= c+offset_x < total_width:
                    grid[r+offset_y][c+offset_x] = STAR 
                os.system("cls" if os.name == "nt" else "clear")
                for row in grid:
                    print(" " * left_padding + " ".join(row))
                time.sleep(delay)

# Demo: "SUPER" then "STAR" shifted slightly right
animate_word(["SUPER", "STAR"], line_offsets=[0, 3])